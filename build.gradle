plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'ru.art3m4ik3'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT'

    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'com.squareup.okio:okio:3.5.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.9.10'

    implementation 'org.json:json:20231013'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'org.yaml:snakeyaml:2.0'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    archiveClassifier.set('')
    minimize()

    relocate 'okhttp3', 'ru.art3m4ik3.craftGPT.lib.okhttp3'
    relocate 'okio', 'ru.art3m4ik3.craftGPT.lib.okio'
    relocate 'kotlin', 'ru.art3m4ik3.craftGPT.lib.kotlin'
    relocate 'org.json', 'ru.art3m4ik3.craftGPT.lib.json'
    relocate 'com.google.gson', 'ru.art3m4ik3.craftGPT.lib.gson'
    relocate 'org.yaml', 'ru.art3m4ik3.craftGPT.lib.yaml'

    dependencies {
        exclude(dependency('org.spigotmc:spigot-api:.*'))
    }
}
